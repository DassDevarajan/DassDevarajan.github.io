{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/product-edit/product-edit.component.css","webpack:///./src/app/product-edit/product-edit.component.html","webpack:///./src/app/product-edit/product-edit.component.ts","webpack:///./src/app/product-list/product-list.component.css","webpack:///./src/app/product-list/product-list.component.html","webpack:///./src/app/product-list/product-list.component.ts","webpack:///./src/app/product-view/product-view.component.css","webpack:///./src/app/product-view/product-view.component.html","webpack:///./src/app/product-view/product-view.component.ts","webpack:///./src/app/product.service.ts","webpack:///./src/app/product.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductComponent } from './product/product.component';\n\nconst routes: Routes = [\n  {path: 'product-list', component: ProductListComponent},\n  {path: 'product-entry', component: ProductComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    {{ title }}\\n  </h1>\\n</div>\\n<br>\\n<div style=\\\"text-align:center\\\">\\n  <h2>{{ subtitle }}</h2>\\n</div>\\n<br>\\n<app-product-list></app-product-list>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular Demo Project';\n  subtitle = 'Online Product Catalog';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductComponent } from './product/product.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { ProductViewComponent } from './product-view/product-view.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductComponent,\n    ProductListComponent,\n    ProductViewComponent,\n    ProductEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QtZWRpdC9wcm9kdWN0LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"!status\\\" class=\\\"container\\\">\\n  <h3>Product Edit Form</h3>\\n  <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(editForm)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" required [(ngModel)]=\\\"product.name\\\" #name=\\\"ngModel\\\">\\n        <div *ngIf=\\\"name.invalid && (submitted || name.touched || name.dirty)\\\">\\n          <div *ngIf=\\\"name.errors.required\\\" class=\\\"alert alert-danger\\\">Name is required</div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"desc\\\">Description:</label>\\n        <textarea class=\\\"form-control\\\" id=\\\"desc\\\" name=\\\"description\\\" required [(ngModel)]=\\\"product.description\\\" #description=\\\"ngModel\\\"></textarea>\\n        <div *ngIf=\\\"description.invalid && (submitted || description.touched || description.dirty)\\\">\\n          <div *ngIf=\\\"description.errors.required\\\" class=\\\"alert alert-danger\\\">Description is required</div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"category\\\">Category:</label>\\n        <select class=\\\"form-control\\\" name=\\\"category\\\" required [(ngModel)]=\\\"product.category\\\" #category=\\\"ngModel\\\">\\n            <option value=\\\"Appliances\\\">Appliances</option> \\n            <option value=\\\"Books\\\">Books</option>\\n            <option value=\\\"Clothes\\\">Clothes</option>\\n            <option value=\\\"Electronics\\\">Electronics</option>\\n            <option value=\\\"Furniture\\\">Furniture</option>\\n        </select>\\n        <div *ngIf=\\\"category.invalid && (submitted || category.touched || category.dirty)\\\">\\n          <div *ngIf=\\\"category.errors.required\\\" class=\\\"alert alert-danger\\\">Category is required</div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"quantity\\\">Quantity:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"quantity\\\" min=\\\"1\\\" \\n            name=\\\"quantity\\\" required [(ngModel)]=\\\"product.quantity\\\" #quantity=\\\"ngModel\\\">\\n          <div *ngIf=\\\"quantity.invalid && (submitted || quantity.touched || quantity.dirty)\\\">\\n            <div *ngIf=\\\"quantity.errors.required\\\" class=\\\"alert alert-danger\\\">Quantity is required</div>\\n            <div *ngIf=\\\"quantity.errors.min\\\" class=\\\"alert alert-danger\\\">Minimum is 1</div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"unitprice\\\">Unit Price($):</label>\\n          <input type=\\\"number\\\"  pattern=\\\"^\\\\d*(\\\\.\\\\d{0,2})?$\\\"  class=\\\"form-control\\\" \\n            id=\\\"unitprice\\\" name=\\\"unitprice\\\" required [(ngModel)]=\\\"product.unitprice\\\" #unitprice=\\\"ngModel\\\">\\n          <div *ngIf=\\\"unitprice.invalid && (submitted || unitprice.touched || unitprice.dirty)\\\">\\n            <div *ngIf=\\\"unitprice.errors.required\\\" class=\\\"alert alert-danger\\\">Unit Price is required</div>\\n            <div *ngIf=\\\"unitprice.errors.pattern\\\" class=\\\"alert alert-danger\\\">Invalid format</div>\\n          </div>\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"supplier\\\">Supplier:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"supname\\\" name=\\\"supplier\\\" \\n          required [(ngModel)]=\\\"product.supplier\\\" #supplier=\\\"ngModel\\\">\\n          <div *ngIf=\\\"supplier.invalid && (submitted || supplier.touched || supplier.dirty)\\\">\\n            <div *ngIf=\\\"supplier.errors.required\\\" class=\\\"alert alert-danger\\\">Supplier is required</div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"checkbox\\\">\\n          <label><input type=\\\"checkbox\\\" name=\\\"returnable\\\" \\n            [(ngModel)]=\\\"product.returnable\\\" #returnable=\\\"ngModel\\\"> Returnable</label>\\n      </div>\\n      \\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" id=\\\"submit\\\">Update</button>\\n  </form>\\n</div>\\n<div *ngIf=\\\"status\\\" class=\\\"container\\\">\\n    <br><br>\\n    <div class=\\\"alert alert-success\\\">Product is successfully updated!</div>\\n</div>\\n  \\n  \"","import { Component, OnInit, Input } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { IProduct, Product } from '../product';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit {\n\n  @Input() product : Product;\n\n  submitted : boolean = false;\n  status : boolean = false;\n  \n  constructor(private _productService : ProductService) {\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit(editForm : NgForm) {\n    this.submitted = true;\n    if(editForm.valid) {\n      this.submitted = false;\n      this.status = true;\n    }\n  }\n}\n","module.exports = \".btn {\\r\\n    border: none;\\r\\n    color: dodgerblue;\\r\\n    padding: 6px 8px;\\r\\n    font-size: 18px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  .btn:hover {\\r\\n    background-color: lightgrey;\\r\\n  }\\r\\n  .menubtn {\\r\\n    background-color: DodgerBlue;\\r\\n    border: none;\\r\\n    color: white;\\r\\n    padding: 6px 8px;\\r\\n    font-size: 16px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  .menubtn:hover {\\r\\n    background-color: RoyalBlue;\\r\\n  }\\r\\n  td {\\r\\n      vertical-align: baseline;\\r\\n  }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdC1saXN0L3Byb2R1Y3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtHQUNqQjtFQUNEO0lBQ0UsNEJBQTRCO0dBQzdCO0VBQ0Q7SUFDRSw2QkFBNkI7SUFDN0IsYUFBYTtJQUNiLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtHQUNqQjtFQUNEO0lBQ0UsNEJBQTRCO0dBQzdCO0VBQ0Q7TUFDSSx5QkFBeUI7R0FDNUIiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0LWxpc3QvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGNvbG9yOiBkb2RnZXJibHVlO1xyXG4gICAgcGFkZGluZzogNnB4IDhweDtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgLmJ0bjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7XHJcbiAgfVxyXG4gIC5tZW51YnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IERvZGdlckJsdWU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiA2cHggOHB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICAubWVudWJ0bjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBSb3lhbEJsdWU7XHJcbiAgfVxyXG4gIHRkIHtcclxuICAgICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG4gIH1cclxuIl19 */\"","module.exports = \"<div *ngIf=\\\"showList == false\\\" class=\\\"container\\\">\\n    <button (click)=\\\"showListForm()\\\" id=\\\"list-menu\\\" style=\\\"float: right\\\" class=\\\"menubtn\\\"><i class=\\\"fa fa-list\\\"></i> List Products</button>\\n </div>\\n\\n<div *ngIf=\\\"showList == true\\\" class=\\\"container\\\">\\n    <button (click)=\\\"showEntryForm()\\\" id=\\\"add-menu\\\" style=\\\"float: right\\\" class=\\\"menubtn\\\"><i class=\\\"fa fa-plus\\\"></i> Add Product</button>\\n</div>\\n\\n<div *ngIf=\\\"showList == true\\\" class=\\\"container\\\">\\n    <h3>Product List</h3>\\n\\n    <table class=\\\"table table-hover\\\">\\n        <tr>\\n            <th *ngFor=\\\"let header of headers\\\">\\n              {{header}}\\n            </th>\\n            <th>View</th>\\n            <th>Edit</th>\\n            <th>Delete</th>\\n          </tr>\\n        <tr *ngFor=\\\"let product of products; index as i\\\">\\n          <td *ngFor=\\\"let col of columns\\\">\\n            {{product[col]}}\\n          </td>\\n          <td>\\n                <button (click)=\\\"view(i)\\\" id=\\\"view\\\" class=\\\"btn\\\"><i class=\\\"fa fa-eye\\\"></i></button>\\n          </td>\\n          <td>\\n                <button (click)=\\\"edit(i)\\\" id=\\\"edit\\\" class=\\\"btn\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\n          </td>\\n          <td>\\n              <button (click)=\\\"delete(i)\\\" id=\\\"delete\\\" class=\\\"btn\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\n          </td>\\n         \\n        </tr>\\n      </table>\\n</div>\\n\\n<div *ngIf=\\\"showEntry == true\\\" class=\\\"container\\\">\\n    <app-product></app-product>\\n</div>\\n\\n<div *ngIf=\\\"showEdit == true\\\" class=\\\"container\\\">\\n    <app-product-edit [product]=\\\"this.editProduct\\\"></app-product-edit>\\n</div>\\n\\n<div  *ngIf=\\\"showView == true\\\" class=\\\"container\\\">\\n    <h3>Product View</h3>\\n    <app-product-view [productView]=\\\"this.viewProduct\\\"></app-product-view>\\n</div>\\n<br><br>\"","import { Component, OnInit } from '@angular/core';\nimport { IProduct, Product } from '../product';\nimport { ProductService } from '../product.service'\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  products : IProduct[];\n  columns : string[];\n  headers : string[];\n  viewProduct : Product;\n  editProduct : Product;\n\n  showList : boolean;\n  showEntry : boolean;\n  showEdit : boolean;\n  showView : boolean;\n\n  constructor(private _productService : ProductService) {\n    this.reset();\n    this.showList = true;\n  }\n\n  ngOnInit() {\n    this.products = this._productService.getProducts();\n    this.headers = this._productService.getListHeaders();\n    this.columns = this._productService.getListColumns();\n  }\n\n  delete(index : number) {\n    this._productService.deleteProduct(index);\n  }\n\n  view(index : number) {\n    this.reset();\n    this.showView = true;\n\n    this.viewProduct = this._productService.getProduct(index);\n  }\n\n  edit(index : number) {\n    this.reset();\n    this.showEdit = true;\n\n    this.editProduct = this._productService.getProduct(index);\n  }\n\n  showListForm() {\n    this.reset();\n    this.showList = true;\n  }\n\n  showEntryForm() {\n    this.reset();\n    this.showEntry = true;\n  }\n\n  showViewForm() {\n    this.reset();\n    this.showView = true;\n  }\n\n  reset() {\n    this.showList = false;\n    this.showEntry = false;\n    this.showEdit = false;\n    this.showView = false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3Qtdmlldy9wcm9kdWN0LXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <table class=\\\"table table-hover\\\">\\n    <tr *ngFor=\\\"let col of columns; index as i\\\">\\n      <th>{{headers[i]}}</th>\\n      <td>{{productView[col]}}</td>\\n    </tr>\\n  </table>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Product } from '../product';\nimport { ProductService } from '../product.service'\n\n@Component({\n  selector: 'app-product-view',\n  templateUrl: './product-view.component.html',\n  styleUrls: ['./product-view.component.css']\n})\nexport class ProductViewComponent implements OnInit {\n\n  @Input() productView : Product;\n  constructor(private _productService : ProductService) { }\n\n  headers : string[];\n  columns : string[];\n\n  ngOnInit() {\n    this.headers = this._productService.getHeaders();\n    this.columns = this._productService.getColumns();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IProduct } from './product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  products : IProduct[];\n  product : IProduct;\n\n  constructor() {\n    this.products =  [\n      { \n        name: \"Lenovo Ideapad 330S Laptop\", description: \"Processor: AMD A9-9425 processor. Operating System: Pre-loaded Windows 10 with lifetime validity. Display: 14-inch HD display\", category: \"Electronics\", \n        quantity: 25, unitprice: 400, supplier: \"Lenovo\", returnable: true\n       },\n \n      {\n        name: \"HP 14 Core i3 Laptop\", description: \"Processor: 7th Generation Intel core i3-7020U processor, 2.3GHz base processor speed. Operating System: Pre-loaded Windows 10 Home with lifetime validity. Display: 14-inch HD (1366x768) display\", category: \"Electronics\", \n        quantity: 10, unitprice: 450, supplier: \"HP\", returnable: true\n      },\n      {\n        name: \"IFB 6.5 Kg Fully-Automatic Washing Machine\", description: \"Fully-automatic top load washing machine: Affordable with great wash quality, Easy to use. Capacity 6.5 kg: Suitable for families with 3 to 4 members. Warranty: 4 years on product, 4 years on motor\", category: \"Appliances\", \n        quantity: 20, unitprice: 250, supplier: \"IFB\", returnable: true\n      },\n      {\n        name: \"1001 Activities Book\", description: \"Designed for preschool kids, the 1001 Activities Book is an educational activity book that promises to engage tiny tots with their first educative lessons in a playful and fun-filled manner.\", category: \"Books\", \n        quantity: 300, unitprice: 4, supplier: \"ABC Publications\", returnable: false\n      }\n    ];\n   }\n\n  getColumns() : string[] {\n    return [\"name\",\"description\",\"category\",\"quantity\",\"unitprice\",\"supplier\",\"returnable\"]\n  }\n\n  getListColumns() : string[] {\n    return [\"name\",\"category\",\"quantity\",\"unitprice\",\"supplier\"]\n  }\n\n  getHeaders() : string[] {\n    return [\"Name\",\"Description\",\"Category\",\"Quantity\",\"Unit Price($)\",\"Supplier\",\"Returnable\"]\n  }\n\n  getListHeaders() : string[] {\n    return [\"Name\",\"Category\",\"Quantity\",\"Unit Price($)\",\"Supplier\"]\n  }\n\n  getProducts() : IProduct[] {\n    return this.products;\n  }\n\n  getProduct(index : number) : IProduct {\n    return this.products[index];\n  }\n\n  addProduct(newProduct : IProduct) : void {\n   this.products.push(newProduct);\n  }\n\n  deleteProduct(index : number) : void {\n    if (index !== -1) {\n        this.products.splice(index, 1);\n    }        \n  }\n}\n","export interface IProduct {\r\n    name : string;\r\n    description : string;\r\n    category : string;\r\n    quantity : number;\r\n    unitprice : number;\r\n    supplier :  string;\r\n    returnable : boolean;\r\n}\r\n\r\nexport class Product implements IProduct {\r\n    name : string;\r\n    description : string;\r\n    category : string;\r\n    quantity : number;\r\n    unitprice : number;\r\n    supplier :  string;\r\n    returnable : boolean = true;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QvcHJvZHVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf =\\\"!status\\\" class=\\\"container\\\">\\n  <h3>Product Entry Form</h3>\\n  <form #entryForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(entryForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" required [(ngModel)]=\\\"product.name\\\" #name=\\\"ngModel\\\">\\n      <div *ngIf=\\\"name.invalid && (submitted || name.touched || name.dirty)\\\">\\n        <div *ngIf=\\\"name.errors.required\\\" class=\\\"alert alert-danger\\\">Name is required</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"desc\\\">Description:</label>\\n      <textarea class=\\\"form-control\\\" id=\\\"desc\\\" name=\\\"description\\\" required [(ngModel)]=\\\"product.description\\\" #description=\\\"ngModel\\\"></textarea>\\n      <div *ngIf=\\\"description.invalid && (submitted || description.touched || description.dirty)\\\">\\n        <div *ngIf=\\\"description.errors.required\\\" class=\\\"alert alert-danger\\\">Description is required</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"category\\\">Category:</label>\\n      <select class=\\\"form-control\\\" name=\\\"category\\\" required [(ngModel)]=\\\"product.category\\\" #category=\\\"ngModel\\\">\\n          <option value=\\\"Appliances\\\">Appliances</option> \\n          <option value=\\\"Books\\\">Books</option>\\n          <option value=\\\"Clothes\\\">Clothes</option>\\n          <option value=\\\"Electronics\\\">Electronics</option>\\n          <option value=\\\"Furniture\\\">Furniture</option>\\n      </select>\\n      <div *ngIf=\\\"category.invalid && (submitted || category.touched || category.dirty)\\\">\\n        <div *ngIf=\\\"category.errors.required\\\" class=\\\"alert alert-danger\\\">Category is required</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"quantity\\\">Quantity:</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"quantity\\\" min=\\\"1\\\" \\n          name=\\\"quantity\\\" required [(ngModel)]=\\\"product.quantity\\\" #quantity=\\\"ngModel\\\">\\n        <div *ngIf=\\\"quantity.invalid && (submitted || quantity.touched || quantity.dirty)\\\">\\n          <div *ngIf=\\\"quantity.errors.required\\\" class=\\\"alert alert-danger\\\">Quantity is required</div>\\n          <div *ngIf=\\\"quantity.errors.min\\\" class=\\\"alert alert-danger\\\">Minimum is 1</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"unitprice\\\">Unit Price($):</label>\\n        <input type=\\\"number\\\"  pattern=\\\"^\\\\d*(\\\\.\\\\d{0,2})?$\\\"  class=\\\"form-control\\\" \\n          id=\\\"unitprice\\\" name=\\\"unitprice\\\" required [(ngModel)]=\\\"product.unitprice\\\" #unitprice=\\\"ngModel\\\">\\n        <div *ngIf=\\\"unitprice.invalid && (submitted || unitprice.touched || unitprice.dirty)\\\">\\n          <div *ngIf=\\\"unitprice.errors.required\\\" class=\\\"alert alert-danger\\\">Unit Price is required</div>\\n          <div *ngIf=\\\"unitprice.errors.pattern\\\" class=\\\"alert alert-danger\\\">Invalid format</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"supplier\\\">Supplier:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"supname\\\" name=\\\"supplier\\\" \\n        required [(ngModel)]=\\\"product.supplier\\\" #supplier=\\\"ngModel\\\">\\n        <div *ngIf=\\\"supplier.invalid && (submitted || supplier.touched || supplier.dirty)\\\">\\n          <div *ngIf=\\\"supplier.errors.required\\\" class=\\\"alert alert-danger\\\">Supplier is required</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"checkbox\\\">\\n        <label><input type=\\\"checkbox\\\" name=\\\"returnable\\\" \\n          [(ngModel)]=\\\"product.returnable\\\" #returnable=\\\"ngModel\\\"> Returnable</label>\\n    </div>\\n    \\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" id=\\\"submit\\\">Add</button>\\n    \\n  </form>\\n</div>\\n<div *ngIf=\\\"status\\\" class=\\\"container\\\">\\n    <br><br>\\n    <div class=\\\"alert alert-success\\\">Product is successfully added!</div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { Product } from '../product';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\n\nexport class ProductComponent implements OnInit {\n\n  product : Product = new Product();\n  submitted : boolean = false;\n  status : boolean = false;\n\n  constructor(private _productService : ProductService) {\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit(entryForm : NgForm) {\n    this.submitted = true;\n    if(entryForm.valid) {\n      this._productService.addProduct(Object.assign({}, this.product));\n      this.status = true;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}